pipeline {
    agent any

    environment {
        CLUSTER_NAME = 'lohan-ecs-cluster'
        SERVICE_NAME = 'lohan-ecs-service'
    }

    stages {
        stage("Git Checkout") {
            steps {
                script {
                    println("git checkout")
                }
                // Source Checkout
                checkout scm
            }
        }

        /*********************** 1. "Infra init *************************/
        stage("node.js service init") {
            steps {
                script {
                    println("node.js service init")
                       sh("""
                        npm install
                        """)

                }
               //  sh 'export ENDPOINT=terraform-20220510065958830200000001.cjonqlniwrjn.ap-northeast-2.rds.amazonaws.com'
            }
        }
        /*************************************************************/
        /*********************** 2. "Infra Plan *************************/
        stage("node.js service start") {
            steps {
                script {
                    println("node.js service start")
                     //   sh("""
                     //    ./was_start.sh
                     //    sleep 5
                     //    """)
                }
                sh './was_start.sh'
                sh 'netstat -ntlp '
                sh 'sleep 10'
                sh 'netstat -ntlp '
            }
        }
        /*************************************************************/
        /*********************** 3. "Infra Apply *************************/
         stage("express service test") {


             steps {
                 script {
                     println("express service validation")
                        sh("""
                         curl http://localhost:3000/
                         """)

                 }
             }
         }
        /*************************************************************/
        stage("was service build") {
                        when {
                expression {env.GIT_BRANCH == 'origin/main'}
            }

             steps {
                 script {
                     println("was service build")

                     sh 'sh rds_endpoint.sh'
                     app = docker.build("151564769076.dkr.ecr.ap-northeast-2.amazonaws.com/lohan-private-node:latest")

                 }
             }
         }
        /*************************************************************/
        stage("was image upload to ecr") {
             when {
                expression {env.GIT_BRANCH == 'origin/main'}
            }

             steps {
                 script {
                     println("was image deploy")


                     docker.withRegistry('https://151564769076.dkr.ecr.ap-northeast-2.amazonaws.com/lohan-private-node','ecr:ap-northeast-2:AWS_adm_credential'){
                     app.push("${env.BUILD_NUMBER}")
                     app.push("latest")}

                 }
             }
         }
        /*************************************************************/
        stage("ecs deploy") {
             when {
                expression {env.GIT_BRANCH == 'origin/main'}
            }

             steps {
                 script {
                     println("was image deploy")
                       sh "aws ecs update-service --cluster ${CLUSTER_NAME} --service ${SERVICE_NAME} --force-new-deployment"

                 }
             }
         }
        /*************************************************************/


    }

}