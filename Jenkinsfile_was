pipeline {
    agent any

    stages {
        stage("Git Checkout") {
            steps {
                script {
                    println("change directory")
                       sh("""
                        cd /root/infra
                        """)

                }
                // Source Checkout
                checkout scm
            }
        }

        /*********************** 1. "Infra init *************************/
        stage("node.js service init") {
            steps {
                script {
                    println("node.js service init")
                       sh("""
                        npm install
                        export ENDPOINT=terraform-20220510065958830200000001.cjonqlniwrjn.ap-northeast-2.rds.amazonaws.com
                        """)

                }
            }
        }
        /*************************************************************/
        /*********************** 2. "Infra Plan *************************/
        stage("node.js service start") {
            steps {
                script {
                    println("node.js service start")
                       sh("""
                        ./was_start.sh
                        sleep 5
                        """)

                }
            }
        }
        /*************************************************************/
        /*********************** 3. "Infra Apply *************************/
         stage("express service test") {


             steps {
                 script {
                     println("express service validation")
                        sh("""
                         curl http://localhost:3000/select
                         """)

                 }
             }
         }
        /*************************************************************/
        stage("was service build") {

             steps {
                 script {
                     println("was service build")
                        app = docker.build("151564769076.dkr.ecr.ap-northeast-2.amazonaws.com/lohan-private-node:latest")

                 }
             }
         }
        /*************************************************************/
         /*************************************************************/
        stage("was service deploy") {
             when {
                expression {env.GIT_BRANCH == 'origin/feature/lohan-was'}
            }

             steps {
                 script {
                     println("was image deploy")
                        docker.withRegistry('https://151564769076.dkr.ecr.ap-northeast-2.amazonaws.com/lohan-private-node:latest', 'ecr:ap-northeast-2:AWS_adm_credential'){
                        app.push("${env.BUILD_NUMBER}")
                        app.push("latest")}


                 }
             }
         }
        /*************************************************************/


    }

}